!function(t){var e={};function n(r){if(e[r])return e[r].exports;var s=e[r]={i:r,l:!1,exports:{}};return t[r].call(s.exports,s,s.exports,n),s.l=!0,s.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)n.d(r,s,function(e){return t[e]}.bind(null,s));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";n.r(e);const r={username:null,style:"default",animation:!0,width:500,height:200,border:1,border_radius:4};const s="https://tioj.ck.tp.edu.tw";async function i(t=1){let e=await fetch(`${s}/users?page=${t}`,{headers:{origin:s,referer:`${s}/users?page=${t}`,"user-agent":"Mozilla/5.0 TIOJ Stats Card"}});const n=await e.text();let r={};return[...n.matchAll(/<tr>\s*?<td>(\d+?)<\/td>\s*?<td><a href="\/users\/([^]+?)"><img class="img-rounded" src="[^]*?" alt="[^]*?" \/><\/a><\/td>\s*?<td><a href="\/users\/[^]*?">[^]*?<\/a><\/td>/g)].forEach(t=>{r[t[2]]=Number(t[1])}),r}function a(t){return t.includes("c++")?"C++":t.includes("c")?"C":t.includes("python")?t.replace("p","P"):t}async function o(t){const e=Promise.all([i(1),i(2),i(3),i(4)]),n=await async function(t){let e=await fetch(`${s}/users/${t}`,{headers:{origin:s,referer:`${s}/users/${t}`,"user-agent":"Mozilla/5.0 TIOJ Stats Card"}});const n=await e.text();let r,i,a,o="",l=null;try{[r,i]=[...n.matchAll(/<h5>([^]+?)<\/h5>\s+?<h6>([^]+?)<\/h6>/g)][0].slice(1)}catch(t){console.log("Not Found: Name, Username")}try{[o]=[...n.matchAll(/<dfn>([^]+?)<\/dfn>/g)][0].slice(1)}catch(t){console.log("Not Found: About")}try{[a]=[...n.matchAll(/<img class="img-rounded img-responsive" src="([^]+?)"/g)][0].slice(1)}catch(t){console.log("Not Found: Avatar")}let c={success:[],warning:[],muted:[]};return[...n.matchAll(/<a class="text-([^]+?)" href="\/problems\/(\d{4})\/submissions\?filter_user_id=(\d{1,6})">\d{4}<\/a>/g)].forEach(t=>{c[t[1]].push(t[2]),l=t[3]}),{name:r,username:i,about:o,avatar:a,user_id:l,problems:c}}(t),r=await async function(t){let e=await fetch(`${s}/submissions?filter_user_id=${t}`,{headers:{origin:s,referer:`${s}/submissions?filter_user_id=${t}`,"user-agent":"Mozilla/5.0 TIOJ Stats Card"}});const n=await e.text();let r=[];return[...n.matchAll(/<tr>\s+?<td><a href="\/submissions\/\d+?">(\d+?)<\/a><\/td>\s+?<td><a href="\/problems\/\d+?">(\d+?)<\/a><\/td>\s+?<td>([^]+?)<\/td>\s+?<td>(\d+?)<\/td>\s+?<td>(\d+?)<\/td>\s+?<td[^]*?>([^]+?)<\/td>\s+?<td>([^]+?)<\/td>\s+?<td>([^]+?)<\/td>\s+?<td>(\d+?)<\/td>\s+?<td>([^]+?)<\/td>\s+?<\/tr>/g)].forEach(t=>{r.push({id:t[1],problem:t[2],lang:a(t[7]),status:t[6],time:new Date(t[10])})}),r}(n.user_id),o=(await e).reduce((t,e)=>Object.assign({},t,e),{});return{username:n.username||null,profile:{user_id:Number(n.user_id),name:n.name||null,avatar:s+n.avatar||null,about:n.about,ranking:o[n.username]?o[n.username]:"100+"},problem:{total:n.problems.success.length+n.problems.warning.length+n.problems.muted.length,solved:n.problems.success.length,tried:n.problems.success.length+n.problems.warning.length},activity:r}}function l(t=500,e=200,n=500,r=200){return[`<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="${t}" height="${e}" viewBox="0 0 ${n} ${r}" fill="none">`,"</svg>"]}function c(t=25,e=25){return`\n    <svg id="tioj_icon" width="${t}" height="${e}" viewBox="0 0 100 100" version="1.1"\n        xmlns="http://www.w3.org/2000/svg"\n        xmlns:xlink="http://www.w3.org/1999/xlink">\n        <polygon points="25,5 75,5 95,25 95,75 75,95 25,95 5,75 5,25" style="fill: #0048ad; stroke: #000000; stroke-width: 0.5;" />\n        <g style="transform: translate(25px, 30px);">\n          <rect x="0" y="0" width="60" height="10" style="fill: #4285e3;" />\n          <rect x="25" y="0" width="10" height="50" style="fill: #4285e3;" />\n        </g>\n        <g style="transform: translate(20px, 25px);">\n          <rect x="0" y="0" width="60" height="10" style="fill: #ffffff;" />\n          <rect x="25" y="0" width="10" height="50" style="fill: #ffffff;" />\n        </g>\n    </svg>\n    `}const d=[[".tioj_stats_card *",{"font-family":'"Segoe UI", "PingFang SC", Ubuntu, Sans-Serif',"transform-box":"fill-box"}],[".tioj_stats_card text, .tioj_stats_card .text",{"font-weight":"bold",fill:"rgb(38, 38, 38)",color:"rgb(38, 38, 38)"}],[".tioj_stats_card text.sub, .tioj_stats_card .sub_text",{fill:"rgb(128, 128, 128)",color:"rgb(128, 128, 128)"}],[".tioj_stats_card rect#background, .tioj_stats_card .theme_background",{fill:"#ffffff",background:"#ffffff"}],[".tioj_stats_card #head",{transform:"translate(0px, 0px)"}],[".tioj_stats_card #body",{transform:"translate(0px, 80px)"}],["#total_solved_circle .circle_bg",{stroke:"rgb(229, 229, 229)"}],["#total_solved_circle #tried_circle, #total_solved_circle #solved_circle",{"transform-box":"fill-box",transform:"rotate(-90deg)"}],[".submission > .status",{transform:"translate(88px, 0px)"}],[".submission > .status.AC",{fill:"#2ecc71"}],[".submission > .status.WA",{fill:"#e74c3c"}],[".submission > .status.TLE",{fill:"#3498db"}],[".submission > .status.MLE",{fill:"#f1c40f"}],[".submission > .status.RE",{fill:"#f1c40f"}],[".submission > .lang",{transform:"translate(128px, 0px)"}],[".submission > .time",{transform:"translate(320px, 0px)","text-anchor":"end"}]],u=[["path#L",{fill:"#ffffff"}],[".tioj_stats_card rect#background, .tioj_stats_card .theme_background",{fill:"#101010",background:"#101010"}],[".tioj_stats_card text, .tioj_stats_card .text",{fill:"rgb(240, 240, 240)",color:"rgb(240, 240, 240)"}],[".tioj_stats_card text.sub, .tioj_stats_card .sub_text",{fill:"rgb(220, 220, 220)",color:"rgb(220, 220, 220)"}],["#total_solved_circle .circle_bg, #solved_details .progress_bg",{stroke:"rgb(64, 64, 64)"}]],m="\n@keyframes fade_in {\n    from {\n        opacity: 0;\n    }\n    to {\n        opacity: 1;\n    }\n}\n".split("\n").map(t=>t.trim()).join(" "),f=[["#icon",{opacity:0}],["#username",{opacity:0}],["#rank",{opacity:0}],[".circle_bg",{opacity:0}],["#tried_circle",{opacity:0}],["#solved_circle",{opacity:0}],["#total_solved",{opacity:0}],["#submission_0",{opacity:0}],["#submission_1",{opacity:0}],["#submission_2",{opacity:0}],["#submission_3",{opacity:0}],["#submission_4",{opacity:0}],["#submission_5",{opacity:0}]];for(let t=0;t<f.length;t++)f[t][1].animation=`fade_in 0.3s ease ${(.1*t).toFixed(2)}s 1 forwards`;function h(t,e=0,n=0){const r=Math.floor(1e3*Math.random());return`@keyframes circle_${r} { 0% { opacity: 0; stroke-dasharray: 0 1000; } 50% { opacity: 1; } 100% { opacity: 1; stroke-dasharray: ${e} 1000; } }`+`${t} { animation: circle_${r} 1.2s ease ${n}s 1 forwards }`}const g=[["#extension",{background:"transparent"}]];function p(t,e){let n="";return d.forEach(t=>{n+=`${t[0]}{${Object.entries(t[1]).map(t=>t[0]+":"+t[1]+";").join("")}} `}),"auto"==t.style&&(n+="@media (prefers-color-scheme: dark) { ",u.forEach(t=>{n+=`${t[0]}{${Object.entries(t[1]).map(t=>t[0]+":"+t[1]+";").join("")}} `}),n+="} "),"dark"==t.style&&u.forEach(t=>{n+=`${t[0]}{${Object.entries(t[1]).map(t=>t[0]+":"+t[1]+";").join("")}} `}),"false"!=t.animation&&0!=Number(t.animation)&&(f.forEach(t=>{n+=`${t[0]}{${Object.entries(t[1]).map(t=>t[0]+":"+t[1]+";").join("")}} `}),n+=m,n+=h("#tried_circle",100*Math.PI*(e.problem.tried/e.problem.total),.7),n+=h("#solved_circle",100*Math.PI*(e.problem.solved/e.problem.total),1.3)),t.extension&&g.forEach(t=>{n+=`${t[0]}{${Object.entries(t[1]).map(t=>t[0]+":"+t[1]+";").join("")}} `}),n}!async function(){addEventListener("fetch",t=>{let e=async function(t){const e=t.request;if("GET"!==e.method)return new Response("Allowed Method: GET");if("https://tioj-card.jacob.workers.dev/favicon.ico"==e.url)return Response.redirect("https://raw.githubusercontent.com/JacobLinCool/tioj-stats-card/main/favicon/tioj.ico",301);const n=function(t){let e={};return[...t.entries()].forEach(t=>{e[t[0]]=t[1]}),void 0!==e.width&&Number(e.height)<400&&(e.extension=!1),"activity"==e.extension&&void 0===e.height&&(e.height=400),void 0!==e.width&&(e.width=Number(e.width)),void 0!==e.height&&(e.height=Number(e.height)),void 0!==e.animation&&("false"!==e.animation&&"0"!==e.animation||(e.animation=!1),e.animation=!!e.animation),console.log("Custom Parameters",e),Object.assign({},r,e)}(new URL(e.url).searchParams);if(console.log("Final Parameters",n),n.username){const r=new Request(e.url,e),i=caches.default;let a=await i.match(r);if(!a){try{const t=await o(n.username);console.log("TIOJ Data",t),a=new Response(function(t,e){const[n,r]=l(e.width,e.height,500,200);return`${n}<title>${t.username} | TIOJ Stats Card</title><style>${p(e,t)}</style>\n<g class="tioj_stats_card theme_${e.style}">\n    <rect id="background" stroke="lightgray" stroke-width="${e.border}" width="${500-e.border}" height="${200-e.border}" x="${e.border/2}" y="${e.border/2}" rx="${e.border_radius}" />\n    <g id="head">\n        <g id="icon" transform="translate(20, 17)">${c(30,30)}</g>\n        <text id="username" transform="translate(65, 40)" style="font-size: 24px;">${t.username}</text>\n        <text id="rank" class="sub" text-anchor="end" transform="translate(480, 40)" style="font-size: 18px;">#${t.profile.ranking}</text>\n    </g>\n    <g id="body">\n        <g id="total_solved_circle" transform="translate(25, -5)">\n            <defs>\n                <rect id="image-round-rect" x="0" y="0" width="100" height="100" rx="50"/>\n                <clipPath id="round-clip">\n                    <use xlink:href="#image-round-rect"/>\n                </clipPath>\n            </defs>\n            <image href="${t.profile.avatar}" height="100" width="100" clip-path="url(#round-clip)" style="opacity: 0.4; display: none;" />\n            <circle class="circle_bg" cx="50" cy="50" r="50" stroke-width="6" />\n            <circle id="tried_circle" cx="50" cy="50" r="50" stroke="#f1c40f" stroke-width="6" stroke-linecap="round" stroke-dasharray="0 1000" transform-origin="50px 50px" />\n            <circle id="solved_circle" cx="50" cy="50" r="50" stroke="#2ecc71" stroke-width="6" stroke-linecap="round" stroke-dasharray="0 1000" transform-origin="50px 50px" />\n            <g>\n                <text id="total_solved" x="50" y="50" style="font-size: 28px;" alignment-baseline="central" dominant-baseline="central" text-anchor="middle">${t.problem.solved}</text>\n            </g>\n        </g>\n        <g id="activity" transform="translate(160, 0)">\n            ${t.activity.slice(0,5).reduce((t,e,n)=>t+`\n                    <g id="submission_${n}" class="submission" transform="translate(0, ${25*n})">\n                    <text>Prob. ${e.problem}</text>\n                    <text class="status ${e.status}">${e.status}</text>\n                    <text class="lang ${e.lang}">${e.lang}</text>\n                    <text class="sub time">${e.time.getFullYear()%100+"."+(e.time.getMonth()+1)+"."+e.time.getDate()+" "+String(e.time.getHours()).padStart(2,0)+":"+String(e.time.getMinutes()).padStart(2,0)+":"+String(e.time.getSeconds()).padStart(2,0)}</text>\n                    </g>\n                    `,"")}\n        </g>\n    </g>\n</g>\n${r}`.split("\n").map(t=>t.trim()).join(" ")}(t,n),{headers:{"Content-Type":"image/svg+xml; charset=utf-8","Cache-Control":"s-maxage=60, maxage=60","Content-Disposition":`inline; filename=${t.username}.stats.svg`}}),(s=a.headers).set("Access-Control-Allow-Origin","*"),s.set("Access-Control-Allow-Credentials",!0)}catch(t){return new Response(function(t){const[e,n]=l(500,200,500,200);return`${e}\n<style>${p(t)}</style>\n<g class="tioj_stats_card theme_${t.style}">\n    <rect id="background" stroke="lightgray" stroke-width="${t.border}" width="${500-t.border}" height="${200-t.border}" x="${t.border/2}" y="${t.border/2}" rx="${t.border_radius}" />\n    <g id="icon" transform="translate(30, 67)">${c(60,60)}</g>\n    <text transform="translate(100, 113)" style="font-size: 48px; ${t.animation?"opacity: 0; animation: fade_in 1 0.3s 0.1s forwards;":""}">User Not Found</text>\n    <a target="_blank" href="https://github.com/JacobLinCool/tioj-stats-card"><text class="sub" transform="translate(480, 180)" text-anchor="end" style="${t.animation?"opacity: 0; animation: fade_in 1 0.8s 0.8s forwards;":""}">TIOJ Status Card</text></a>\n</g>\n${n}`}(n),{headers:{"Content-Type":"image/svg+xml; charset=utf-8"},status:404,statusText:"Not Found"})}t.waitUntil(i.put(r,a.clone()))}return a}return new Response('\n<!DOCTYPE html>\n<html>\n    <head>\n        <meta charset="UTF-8" />\n        <link rel="icon" href="https://raw.githubusercontent.com/JacobLinCool/tioj-stats-card/main/favicon/tioj.ico" />\n        <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n        <title>TIOJ Stats Card</title>\n        <meta property="og:title" content="TIOJ Stats Card" />\n        <meta property="og:description" content="A simple tool for every TIOJ coder. Show your TIOJ stats on your GitHub profile or your website!" />\n    </head>\n    <body>\n        <h1>TIOJ Stats Card</h1>\n        <input id="username" placeholder="Your TIOJ Username">\n        <select id="style">\n            <option value="default" selected>Default</option>\n            <option value="dark">Dark</option>\n            <option value="auto">Auto (Beta)</option>\n        </select>\n        <div>\n            <button onclick="preview()">Preview</button>\n            <button onclick="go()">Go</button>\n            <button onclick="md()">Markdwon</button>\n        </div>\n        <div>\n            <img id="preview" src="https://tioj-card.jacob.workers.dev/?username=casperwang"></img>\n        </div>\n        <div style="height: 20px;"></div>\n        <div>\n            <a href="https://github.com/JacobLinCool/tioj-stats-card">View on GitHub</a>\n        </div>\n        <style>\n            html, body {\n                width: 100%;\n                height: 100%;\n                margin: 0;\n                padding: 0;\n\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                align-items: center;\n\n                font-family: sans-serif;\n            }\n            h1 {\n                margin: 8px 0;\n            }\n            input, select {\n                width: 320px;\n                margin: 8px 0;\n                padding: 2px;\n            }\n            button {\n                width: 100px;\n                margin: 8px;\n            }\n            div {\n                width: 320px;\n                margin: 8px 0;\n\n                display: flex;\n                flex-direction: row;\n                justify-content: center;\n                align-items: center;\n            }\n            img {\n                width: 100%;\n                min-height: 128px;\n            }\n        </style>\n        <script>\n            function url() {\n                if(!document.querySelector("#username").value.trim()) document.querySelector("#username").value = "casperwang";\n                return location.origin + "/?username=" + document.querySelector("#username").value.trim() + "&style=" + document.querySelector("#style").value;\n            }\n            function preview() {\n                document.querySelector("#preview").src = url();\n            }\n            function go() {\n                let win = window.open();\n                win.location = url()\n            }\n            function md() {\n                let code = "![TIOJ Stats](" + url() + ")";\n                prompt("Markdown Code: ", code);\n            }\n        <\/script>\n    </body>\n</html>\n',{headers:{"Content-Type":"text/html; charset=utf-8"}});var s}(t);t.respondWith(e)})}()}]);